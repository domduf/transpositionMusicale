package transpositionMusicale;


/**
 * 
 * 
 * 
 * @version 7 decembre 2015
 * @author Dominique Dufour NFA 031 année 2014-2015
 *  
 */
public class TranspositionMusicale {
	
	/**
	 * Ce projet doit permettre de transposer une armure musicale vers une autre. 
	 * On utilisera au debut une description des clés sous la forme U1 pour Ut 1 etG2 pour Sol 2ème ligne.
	 * 
	 * Main
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		// déclaration des variables
		int codeCleDepart = 0; 		// code de la clé du morceau de départ
		int codeCleTranspo=0;		// code de la clé du morceau pour lire à vue
		int codeTonDepart = 0;		// code de la tonalité du morceau de départ
		int codeTonInstruDepart=0; 	// l'instrument qui joue le morceau de départ
									// est dans cette tonalité
		int codeTonInstruArrive=0; 	// l'instrument qui devra jouer le morceau
									// transposé est dans cette tonalité
		int codeTonFinal=0;			//Ton transposé.
		
		boolean transpoVue = false; // l'instrument qui devra jouer le morceau
									// devra-t-il transposer à vue ?

		// Bonjour !!!
		Methodes.bonjour();
		
		// "Entrer la clé de la partition de  départ  (UT3="U3" UT4="U4", FA4="F4"  FA3 ou SOL)"
		Methodes.pourCommencer();

		// Saisie de la clé de depart
		codeCleDepart = Methodes.entreeCle();

		// ----------------------------------------
		//Terminal.ecrireString("Code clé Départ = " + codeCleDepart);
		
		/* Affichage de la clé de départ en clair, Sol si aucune entrée, correction si clé impossible
		telle Fa5 ou Sol4*/
		Terminal.ecrireStringln("Clé de départ --> "+
		Methodes.conversionCodeCleVersCle(codeCleDepart));
		Terminal.sautDeLigne();
		
		// "Dans quel ton est la partition de départ ?"
		Terminal.ecrireStringln("Entrez maintenant l'armure du morceau de départ.");
		codeTonDepart = Methodes.entreeTon();
		/* Affichage du code de la tonalité de départ
		Terminal.ecrireStringln("Code ton Départ = " + codeTonDepart);*/
		Terminal.sautDeLigne();
	
		
		// "Dans quel ton est l'instrument qui lit la partition d'origine ? "
		Terminal.ecrireStringln("Entrez maintenant l'armure du ton de l'instrument d'origine.");
		codeTonInstruDepart = Methodes.entreeTon();
		//Terminal.ecrireStringln("Code ton instrument origine = " + codeTonInstruDepart);
		Terminal.sautDeLigne();
		
		// "Dans quel ton est l'instrument pour lequel vous voulez transposer ? "		
		Terminal.ecrireStringln("Entrez maintenant l'armure du ton de l'instrument final.");
		codeTonInstruArrive = Methodes.entreeTon();
		//Terminal.ecrireStringln("Code ton instrument final = " + codeTonInstruArrive);
		Terminal.sautDeLigne();	
				
		//Calcul du code du Ton Final
		codeTonFinal= Methodes.calculTonFinal(codeTonDepart, codeTonInstruDepart, codeTonInstruArrive );
		//Terminal.ecrireStringln("et voilà la tonalité en clair: "+Methodes.tonEnClair(codeTonFinal));	
		
		//recapitulation des variables:
		Methodes.recapitulationVariables(codeCleDepart, codeTonDepart, 
				codeTonInstruDepart,codeTonInstruArrive,codeTonFinal);
		
		// "Voulez-vous transposer à vue ? (o/n)"
			transpoVue=Methodes.choixTranspoVue();
			
			// si oui, calcul clé avec laquelle on doit lire la partition d'origine
			// afin que les notes entendues soient les mêmes.
			if (transpoVue){
			codeCleTranspo = Methodes.transpoDeCle(codeCleDepart,
					codeTonInstruDepart, codeTonInstruArrive);
			
			Methodes.afficheTranspoVue (codeCleDepart, codeCleTranspo);
			}
				
		// Affichage du contenu de l'armure de la partition
		// ré-écrite pour l'instrument final.
		//	Terminal.ecrireStringln("Code ton final: "+ codeTonFinal);
		Methodes.afficheArmurePartTransposee(codeTonFinal);
	}

}
